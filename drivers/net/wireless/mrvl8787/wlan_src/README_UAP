===============================================================================
			U S E R  M A N U A L

 Copyright (C) 2009-2011, Marvell International Ltd. 
 All Rights Reserved

1) FOR DRIVER BUILD

	Goto source code directory wlan_src.
		make [clean] build
	The driver binaries can be found in ../bin_xxxx directory.
	The driver code supports Linux kernel up to 2.6.39.

2) FOR DRIVER INSTALL

	a) Copy sd8786_uapsta.bin | sd8787_uapsta.bin | ... to /system/etc/firmware/mrvl/ 
	   directory, create the directory if it doesn't exist.
	b) Install uAP driver,
		insmod mlan.ko
		insmod sd8688.ko | sd8787.ko | ...
	c) Uninstall uAP driver,
		ifconfig uapX down
		rmmod sd8xxx
		rmmod mlan

3) FOR DRIVER PROC & DEBUG
	The following info are provided in /proc/mwlan/uapX/info.

	driver_name = "uap"
	driver_version = <driver version>
	InterfaceName= "uapX"
	State= "Disconnected" | "Connected"
	MACAddress= <6-byte adapter MAC address>
	MCCount= <multicast address count>
	num_tx_bytes = <number of bytes sent to device>
	num_rx_bytes = <number of bytes received from device and sent to kernel> 
	num_tx_pkts = <number of packets sent to device>
	num_rx_pkts = <number of packets received from device and sent to kernel>
	num_tx_pkts_dropped = <number of tx packets dropped by driver>
	num_rx_pkts_dropped = <number of rx packets dropped by driver>
	num_tx_pkts_err = <number of tx packets failed to send to device>
	num_rx_pkts_err = <number of rx packets failed to receive from device>
	num_tx_timeout =  <number of tx timeout>
	carrier "on" | "off"
	tx queue "stopped" | "started"

	The following debug info are provided in /proc/mwlan/uapX/debug.

	drvdbg = <bit masks of driver debug message control>
		bit 0:  MMSG  		PRINTM(MMSG,...)
		bit 1:  MFATAL		PRINTM(MFATAL,...)
		bit 2:  MERROR		PRINTM(MERROR,...)
		bit 3:  MDATA 		PRINTM(MDATA,...)
		bit 4:  MCMND 		PRINTM(MCMND,...)
		...
		bit 16: MDAT_D		PRINTM(MDAT_D,...), DBG_HEXDUMP(MDAT_D,...)
		bit 17: MCMD_D		PRINTM(MCMD_D,...), DBG_HEXDUMP(MCMD_D,...)
		bit 28: MENTRY		PRINTM(MENTRY,...), ENTER(), LEAVE()
		bit 29: MWARN 		PRINTM(MWARN,...)
		bit 30: MINFO 		PRINTM(MINFO,...)
	wmm_ac_vo = <number of packets sent to device from WMM AcVo queue>
	wmm_ac_vi = <number of packets sent to device from WMM AcVi queue>
	wmm_ac_be = <number of packets sent to device from WMM AcBE queue>
	wmm_ac_bk = <number of packets sent to device from WMM AcBK queue>
	max_tx_buf_size = <maximum Tx buffer size>
	tx_buf_size = <current Tx buffer size>
	curr_tx_buf_size = <current Tx buffer size in FW>
	ps_mode = <0/1, CAM mode/PS mode>
	ps_state = <0/1/2/3, awake state/pre-sleep state/sleep-confirm state/sleep state>
	wakeup_dev_req = <0/1, wakeup device not required/required>
	wakeup_tries = <wakeup device count, cleared when device awake>
	hs_configured = <0/1, host sleep not configured/configured>
	hs_activated = <0/1, extended host sleep not activated/activated>
	num_tx_timeout = <number of Tx timeout>
	num_cmd_timeout = <number of timeout commands>
	timeout_cmd_id = <command id of the last timeout command>
	timeout_cmd_act = <command action of the last timeout command>
	last_cmd_id = <command id of the last several commands sent to device>
	last_cmd_act = <command action of the last several commands sent to device>
	last_cmd_index = <0 based last command index>
	last_cmd_resp_id = <command id of the last several command responses received from device>
	last_cmd_resp_index = <0 based last command response index>
	last_event = <event id of the last several events received from device>
	last_event_index = <0 based last event index>
	num_cmd_h2c_fail = <number of commands failed to send to device>
	num_cmd_sleep_cfm_fail = <number of sleep confirm failed to send to device>
	num_tx_h2c_fail = <number of data packets failed to send to device>
	num_cmdevt_c2h_fail = <number of commands/events failed to receive from device>
	num_rx_c2h_fail = <number of data packets failed to receive from device>
	num_int_read_fail = <number of interrupt read failures>
	last_int_status = <last interrupt status>
	cmd_sent = <0/1, send command resources available/sending command to device>
	data_sent = <0/1, send data resources available/sending data to device>
	mp_rd_bitmap = <SDIO multi-port read bitmap>
	curr_rd_port = <SDIO multi-port current read port>
	mp_wr_bitmap = <SDIO multi-port write bitmap>
	curr_wr_port = <SDIO multi-port current write port>
	cmd_resp_received = <0/1, no cmd response to process/response received and yet to process>
	event_received = <0/1, no event to process/event received and yet to process>
	ioctl_pending = <number of ioctl pending>
	tx_pending = <number of Tx packet pending>
	rx_pending = <number of Rx packet pending>
	malloc_count = <number of malloc done>
	lock_count = <number of lock used>
	mbufalloc_count = <number of mlan_buffer allocated>

	Example:
		echo "drvdbg=0x7" > /proc/mwlan/uapX/debug	#enable MMSG,MFATAL,MERROR messages

	Use dmesg or cat /var/log/debug to check driver debug messages.

	To log driver debug messages to file,
	a) Edit /etc/rsyslog.conf, add one line "*.debug		/var/log/debug"
	b) touch /var/log/debug (if the file doesn't exist)
	c) service rsyslog restart

4) SOFT_RESET command
   This command is used to perform a "soft reset" on the module. 
   The FW code will disable hardware and jump to boot code. 
   Host software will then need to re-download firmware if required. 

   Usage: 
	echo "soft_reset=1" > /proc/mwlan/config

5)BSS_START command and BSS_STOP command
   This command start/stop the BSS.
   
   Usage:
    echo "bss_start=1" > /proc/mwlan/uapX/setting   
        Starts the BSS.

    echo "bss_start=0" > /proc/mwlan/uapX/setting
        Stop the BSS.

===============================================================================

		U S E R  M A N U A L  F O R  UAPUTL

NAME
uaputl.exe [options] <command> [command parameters]]

Options:
	--help 	Display help
	-v    	Display version
	-i <interface>
	-d <debug_level=0|1|2>            

Example:
	./uaputl.exe --help			
		"display help for uaputl"

	./uaputl.exe sys_config --help
		"display help for sys_config command"

This tool can be used to set/get uAP's settings. To change AP settings, you might 
need to issue "bss_stop" command to stop AP before making change and issue "bss_start" 
command to restart the AP after making change. 

------------------
Supported Commands
------------------
version
debug_level
sys_config [CONFIG_FILE_NAME]
bss_config [CONFIG_FILE_NAME]
sys_info
sys_reset
bss_start
bss_stop
sta_list
sta_deauth <STA_MAC_ADDRESS>
sta_deauth_ext <STA_MAC_ADDRESS> <REASON_CODE>
powermode [MODE] [SLEEP_PARAM=1 CTRL MIN_SLEEP MAX_SLEEP] [INACT_PARAM=2 INACTTO MIN_AWAKE MAX_AWAKE]
pscfg [MODE] [CTRL INACTTO MIN_SLEEP MAX_SLEEP MIN_AWAKE MAX_AWAKE]
sys_cfg_custom_ie [INDEX] [MASK] [IEBuffer]
hscfg [condition [[GPIO# [gap]]]]
sys_cfg_wmm  [qosinfo=<qosinfo>]
             [AC_BE AIFSN ECW_MAX ECW_MIN TX_OP] 
             [AC_BK AIFSN ECW_MAX ECW_MIN TX_OP]
             [AC_VI AIFSN ECW_MAX ECW_MIN TX_OP]
             [AC_VO AIFSN ECW_MAX ECW_MIN TX_OP] 
sys_cfg_11n [ENABLE] [HTCAP] [AMPDU] [TXBFCAP]
addbapara [timeout txwinsize rxwinsize]
aggrpriotbl <m0> <n0> <m1> <n1> ... <m7> <n7>
addbareject <m0> <m1> ... <m7>
deepsleep [MODE] [IDLE_TIME]
hostcmd <txpwrlimit_cfg.conf> txpwrlimit_cfg_get
hostcmd <txpwrlimit_cfg.conf> txpwrlimit_2g_cfg_set
hostcmd <txpwrlimit_cfg.conf> txpwrlimit_5g_cfg_set

-------------------------------------------------------------------
The following commands can be issued individually for debug purpose
-------------------------------------------------------------------
sys_cfg_ap_mac_address [AP_MAC_ADDRESS]
sys_cfg_ssid [SSID]
sys_cfg_beacon_period [BEACON_PERIOD]
sys_cfg_dtim_period [DTIM_PERIOD]
sys_cfg_channel [CHANNEL] [MODE]
sys_cfg_scan_channels [CHANNELS]
sys_cfg_rates [RATES]
sys_cfg_rates_ext [rates RATES] [mbrate RATE] [urate RATE]
sys_cfg_tx_power [TX_POWER]
sys_cfg_bcast_ssid_ctl [1|0]
sys_cfg_preamble_ctl 
sys_cfg_bss_status
sys_cfg_antenna_ctl <ANTENNA> [MODE]
sys_cfg_rts_threshold [RTS_THRESHOLD]
sys_cfg_frag_threshold [FRAG_THRESHOLD]
sys_cfg_rsn_replay_prot [1|0]
sys_cfg_radio_ctl [0|1]
sys_cfg_tx_data_rate [TX_DATA_RATE]
sys_cfg_mcbc_data_rate [MCBC_DATA_RATE]
sys_cfg_pkt_fwd_ctl [0}1]
sys_cfg_sta_ageout_timer [STA_AGEOUT_TIMER]
sys_cfg_ps_sta_ageout_timer [PS_STA_AGEOUT_TIMER]
sys_cfg_auth [AUTH_MODE]
sys_cfg_protocol [PROTOCOL]
sys_cfg_wep_key [INDEX ISDEFAULT KEY]
sys_cfg_cipher [PAIRWISE_CIPHER GROUP_CIPHER]
sys_cfg_pwk_cipher [<PROTOCOL>] [PAIRWISE_CIPHER]
sys_cfg_gwk_cipher [GROUP_CIPHER]
sys_cfg_group_rekey_timer [GROUP_REKEY_TIMER] 
sys_cfg_wpa_passphrase [PASSPHRASE]
sys_cfg_max_sta_num [STA_NUM]
sys_cfg_retry_limit [RETRY_LIMIT]
sys_cfg_eapol_pwk_hsk [<TIMEOUT> <RETRIES>]
sys_cfg_eapol_gwk_hsk [<TIMEOUT> <RETRIES>]
sta_filter_table <FILTERMODE> <MACADDRESS_LIST>
regrdwr <TYPE> <OFFSET> [value]
memaccess <ADDR> [value]
rdeeprom <offset> <byteCount>
cfg_data <type> [*.conf]
sys_debug [subcmd] [parameter]
sys_cfg_80211d [state STATE] [country COUNTRY]
uap_stats

-------------------
Details of Commands
-------------------

version
-------
    "./uaputl.exe -v"

    This command prints the uAP utility version information.

debug_level
-----------
    "./uaputl.exe -d <debug_level>"

    The supported debug_level are:
        0     - no debug
        1     - enable MSG_DEBUG  
        2     - enable all the debug 
    This command use to control the debug level of uaputl.exe. 

    Example:
	./uaputl.exe -d 2 sys_config
		Enable all the debug in uaputl.exe

sys_config
----------
    "./uaputl.exe sys_config [CONFIG_FILE]"
    This command is used to set or get the current settings of the Micro AP.

    The supported options are:
        CONFIG_FILE is file contain all the Micro AP settings.
        empty - Get current Micro AP settings

    Example:
	./uaputl.exe sys_config
		Get current settings of the Micro AP.

	./uaputl.exe sys_config config/uaputl.conf
		Load Micro AP's settings from uaputl.conf file and set.	

bss_config
----------
    "./uaputl.exe bss_config [CONFIG_FILE]"
    This command is used to set or get the current settings of the BSS.

    The supported options are:
        CONFIG_FILE is file contain all the BSS settings.
        empty - Get current BSS settings

    Example:
	./uaputl.exe bss_config
		Get current settings of the BSS.

	./uaputl.exe bss_config config/uaputl.conf
		Load BSS settings from uaputl.conf file and set.

sys_info
--------
    "./uaputl.exe sys_info"

    This command returns system information such as firmware version number
    and HW information.

sys_reset
---------
    "./uaputl.exe sys_reset"

    This command is used to reset the Micro AP back to its initial state.
    For example, this can be used to recover from a serious error, or before
    creating a new BSS.

    This command has the following effects:
        1. The WLAN hardware MAC is reset.
        2. All MIB variables are initialized to their respective default
           values.
        3. The firmware internal variables are reset to their respective
           default values.
        4. The firmware state machines are reset to their respective initial
           states.

bss_start
---------
    "./uaputl.exe bss_start"

    This command starts the BSS.
    There is no error for redundant bss_start command.

bss_stop
--------
    "./uaputl.exe bss_stop"

    This command stops the BSS. The command causes the firmware to:
        1. Deauthenticate all associated client stations.
        2. Turn off the radio (hence stopping beaconing).
    There is no error for redundant bss_stop command.

sta_list
--------
    "./uaputl.exe sta_list"

    This command returns the list of client stations that are currently
    associated with the AP.

    The output is formatted as shown below, for each STA:
    "STA <STA_NUM> information:
     ==========================
     MAC Address: <STA MAC address>
     Power mfg status: active|power save
     Rssi:  <RSSI_VALUE>"

sta_deauth
----------
    "./uaputl.exe sta_deauth <STA_MAC_ADDRESS>"

    This command is used to de-authentciate a client station for any reason.

sys_cfg_ap_mac_address
----------------------
    "./uaputl.exe sys_cfg_ap_mac_address [AP_MAC_ADDRESS]"

    This command is used to set or get the AP MAC address.

    If no arguments are given, this command returns the current AP MAC
    address.
    Otherwise, this MAC address becomes the BSSID of the infrastructure
    network created by the AP.

    Example: 
	./uaputl.exe sys_cfg_ap_mac_address 00:50:43:20:aa:bb
		Set AP MAC address to 00:50:43:20:aa:bb

	./uaputl.exe sys_cfg_ap_mac_address
		Get AP MAC address"		

sys_cfg_ssid
------------
    "./uaputl.exe sys_cfg_ssid [SSID]"

    This command is used to set or get the AP SSID.

    If no arguments are given, this command returns the current AP SSID.
    While setting, the maximum length of the SSID can be 32 characters.

    Example: 
	./uaputl.exe sys_cfg_ssid microap
		Set AP ssid to "microap"

	./uaputl.exe sys_cfg_ssid
		Get AP ssid   

sys_cfg_beacon_period
---------------------
    "./uaputl.exe sys_cfg_beacon_period [BEACON_PERIOD]"

    This command is used to set or get the AP beacon period.

    If no arguments are given, this command returns the current AP beacon
    period.

    Beacon period is represented in milliseconds.

    Example: 
	./uaputl.exe sys_cfg_beacon_period 100
		Set AP beacon period to 100 TU

	./uaputl.exe sys_cfg_beacon_period
		Get AP beacon period

sys_cfg_dtim_period
-------------------
    "./uaputl.exe sys_cfg_dtim_period [DTIM_PERIOD]

    This command is used to set or get the AP DTIM period.

    If no arguments are given, this command returns the current AP DTIM
    period.

    Example: 
	./uaputl.exe sys_cfg_dtim_period 3
		Set AP DTIM period to 3

	./uaputl.exe sys_cfg_dtim_period
		Get AP DTIM period

sys_cfg_scan_channels
---------------------
    "./uaputl.exe sys_cfg_scan_channels [CHANNELS]"

    This command is used to set or get the AP's scan channel list.

    If no arguments are given, this command returns the scan channel list.
   
    Each channel must be separated by a space.
 
    Example: 
	./uaputl.exe sys_cfg_scan_channels 1 11 6
		Set AP scan channel list to 1 11 6 

	./uaputl.exe sys_cfg_scan_channels 11 6
		Set AP scan channel list to 11 6 

	./uaputl.exe sys_cfg_scan_channels
		Get AP scan channel list 

sys_cfg_channel
---------------
    "./uaputl.exe sys_cfg_channel [CHANNEL] [MODE]"

    This command is used to set or get the AP radio channel.

    If no arguments are given, this command returns the current AP radio
    channel.

    MODE: band config mode.
          Bit 0:  automatic channel selection (ACS) enable/disable
          Bit 1:  secondary channel is above primary channel enable/disable(only allow for channel 1-7)
          Bit 2:  secondary channel is below primary channel enable/disable(only allow for channel 5-11)
          For 'a' band channel:
          Bit 1:  secondary channel is above primary channel enable/disable(only allow for channels 36-60, 100-112, 136, 149-161)
          Bit 2:  secondary channel is below primary channel enable/disable(only allow for channels 40-64, 104-116, 140, 153-165)

    Example:
        ./uaputl.exe sys_cfg_channel 6
                Set AP radio channel to 6, and no secondary channel.

        ./uaputl.exe sys_cfg_channel 11 0
                Set AP radio channel to 11 with Manual Channel Select.

        ./uaputl.exe sys_cfg_channel 0 1
                Set AP to ACS.

        ./uaputl.exe sys_cfg_channel
                Get AP radio channel

        ./uaputl.exe sys_cfg_channel 6 2
                Set AP primary radio channel to 6, and secondary channel is above.
        ./uaputl.exe sys_cfg_channel 6 4
                Set AP primary radio channel to 6, and secondary channel is below
        ./uaputl.exe sys_cfg_channel 0 3
                Set AP to ACS mode, and secondary channel is above.
        ./uaputl.exe sys_cfg_channel 0 5
                Set AP to ACS mode, and secondary channel is below.
        ./uaputl.exe sys_cfg_channel 36 2
                Set AP primary radio channel to 36, and secondary channel is above.
        ./uaputl.exe sys_cfg_channel 40 4
                Set AP primary radio channel to 40, and secondary channel is below.

sys_cfg_rates
-------------
    "./uaputl.exe sys_cfg_rates [RATES]"

    If 'Rate' provided, a 'set' is performed else a 'get' is performed
    RATES is provided as a set of data rates, in unit of 500 kilobits
    A rate with MSB bit is basic rate, i.e 0x82 is basic rate.
    
    'set' will not allowed after bss start. 
  
    Valid rates: 2, 4, 11, 22, 12, 18, 24, 36, 48, 72, 96, 108
    Non-Basic rates: 0x02, 0x04, 0x0b, 0x16, 0x0C, 0x12, 0x18, 0x24, 0x30, 0x48, 0x60, 0x6c
    Basic rates: 0x82, 0x84, 0x8b, 0x96, 0x8C, 0x92, 0x98, 0xA4, 0xB0, 0xC8, 0xE0, 0xEc

    Each rate must be separated by a space.

    Example: 
    ./uaputl.exe sys_cfg_rates 0x82 0x84 0x96 0x0c 0x12 0x18
    ./uaputl.exe sys_cfg_rates

sys_cfg_rates_ext
-----------------
    "./uaputl.exe sys_cfg_rates_ext [rates RATES] [mbrate RATE] [urate RATE]"

    If 'Rate' provided, a 'set' is performed else a 'get' is performed.
    RATES is provided as a set of data rates, in unit of 500 kilobits
    A rate with MSB bit is basic rate, i.e 0x82 is basic rate.
    If only operational rates is provided, MCBC rate and unicast rate will be set to auto. 
	
    Valid rates: 2, 4, 11, 22, 12, 18, 24, 36, 48, 72, 96, 108
    Non-Basic rates: 0x02, 0x04, 0x0b, 0x16, 0x0C, 0x12, 0x18, 0x24, 0x30, 0x48, 0x60, 0x6c
    Basic rates: 0x82, 0x84, 0x8b, 0x96, 0x8C, 0x92, 0x98, 0xA4, 0xB0, 0xC8, 0xE0, 0xEc
    Rates 2, 4, 11 and 22 (in units of 500 Kbps) must be present in either of
    basic or non-basic rates. If OFDM rates are enabled then 12, 24 and 48 (in
    units of 500 Kbps) must be present in either basic or non-basic rates.

    Each rate must be separated by a space.

    rates followed by RATES for setting operational rates.
    mbrate followed by RATE for setting multicast and broadcast rate.
    urate followed by RATE for setting unicast rate.

    operational rates only allow to set before bss start. 

    Example: 
    ./uaputl.exe sys_cfg_rates_ext rates 0x82 0x04 11 0x96 12 24 48 urate 0x2 mbrate 0x16
		Set AP operation rates to 0x82,0x04,11,0x96,12,24,48, unicast rate to 2, multicast rate to 0x16

    ./uaputl.exe sys_cfg_rates_ext rates 0x82 0x04 11 0x96 12 24 48
		Set AP operation rates to 0x82,0x04,11,0x96,12,24,48, unicast rate to auto, multicast rate to auto

sys_cfg_tx_power
----------------
    "./uaputl.exe sys_cfg_tx_power [TX_POWER]"

    This command is used to set or get the AP Tx power.

    If no arguments are given, this command returns the current AP Tx power.

    Tx power level is represented in dBm.

    Example: 
	./uaputl.exe sys_cfg_tx_power 13
		Set AP Tx power to 13 dBm

	./uaputl.exe sys_cfg_tx_power
		Get AP Tx power

sys_cfg_bcast_ssid_ctl
----------------------
    "./uaputl.exe sys_cfg_bcast_ssid_ctl [1|0]"

    This command is used to set or get the SSID broadcast feature setting.

    The supported options are:
        0     - Disable SSID broadcast
        1     - Enable SSID broadcast
        empty - Get current SSID broadcast setting

    When broadcast SSID is enabled, the AP responds to probe requests from
    client stations that contain null SSID.

    When broadcast SSID is disabled, the AP:
        1. Does not respond to probe requests that contain null SSID.
        2. Generates beacons that contain null SSID.

   Example: 
	./uaputl.exe sys_cfg_bcast_ssid_ctl 1
		Enable SSID broadcast

	./uaputl.exe sys_cfg_bcast_ssid_ctl
		Get SSID broadcast setting

sys_cfg_preamble_ctl
--------------------
    "./uaputl.exe sys_cfg_preamble_ctl"

    This command is used to get type of preamble.

    Example: 
	./uaputl.exe sys_cfg_preamble_ctl
		Get AP preamble setting

sys_cfg_bss_status
--------------------
    "./uaputl.exe sys_cfg_bss_status"

    This command is used to get current BSS status.

    Example:
	./uaputl.exe sys_cfg_bss_status
		Get current BSS status

sys_cfg_antenna_ctl
-------------------
    "./uaputl.exe sys_cfg_antenna_ctl <ANTENNA> [MODE]"

    This command is used to set or get the antenna settings.

    The supported options are:
        ANTENNA : 0 - Rx antenna
                  1 - Tx antenna
        MODE    : 0       - Antenna A
                  1       - Antenna B
                  empty   - Get current antenna settings

    Example: 
	./uaputl.exe sys_cfg_antenna_ctl 0 1
		Set AP Rx antenna to Antenna B

	./uaputl.exe sys_cfg_antenna_ctl 1
		Get AP Tx antenna

sys_cfg_rts_threshold
---------------------
    "./uaputl.exe sys_cfg_rts_threshold [RTS_THRESHOLD]"

    This command is used to set or get the RTS threshold value.

    If no arguments are given, this command returns the current RTS threshold
    value.

    Example: 
	./uaputl.exe sys_cfg_rts_threshold 2347
		Set AP RTS threshold to 2347

	./uaputl.exe sys_cfg_rts_threshold
		Get AP RTS threshold

sys_cfg_frag_threshold
----------------------
    "./uaputl.exe sys_cfg_frag_threshold [FRAG_THRESHOLD]"

    This command is used to set or get the Fragmentation threshold value.

    If no arguments are given, this command returns the current Fragmentation threshold
    value.

    Example: 
	./uaputl.exe sys_cfg_frag_threshold 2346
		Set AP Fragmentation threshold to 2346

	./uaputl.exe sys_cfg_frag_threshold
		Get AP Fragmentation threshold

sys_cfg_rsn_replay_prot
-----------------------
    "./uaputl.exe sys_cfg_rsn_replay_prot [1|0]"

    This command is used to enable or disable RSN replay protection.

    The supported options are:
        0     - Disable RSN replay protection
        1     - Enable RSN replay protection
        empty - Get current RSN replay protection setting

   Example: 
	./uaputl.exe sys_cfg_rsn_replay_prot 1
		Enable RSN replay protection 

	./uaputl.exe sys_cfg_rsn_replay_prot
		Get RSN replay protection setting

sys_cfg_radio_ctl
-----------------
    "./uaputl.exe sys_cfg_radio_ctl [0|1]"

    This command is used to set or get the radio settings.

    The supported options are:
        0     - Turn radio on
        1     - Turn radio off
        empty - Get current radio setting

    Example: 
	./uaputl.exe sys_cfg_radio_ctl 1
		Turn AP radio off

	./uaputl.exe sys_cfg_radio_ctl
		Get AP radio setting

sys_cfg_tx_data_rate
--------------------
    "./uaputl.exe sys_cfg_tx_data_rate [TX_DATA_RATE]"

    This command is used to set or get the Tx data rate settings.

    The supported options are:
        0     - Auto rate
        >0    - Set specified data rate
        empty - Get current data rate

    Tx data rate is represented in units of 500 kbps. While setting Tx data
    rates, only zero or rates currently configured are allowed.

	Following is the list of supported rates in units of 500 Kbps:
	    2,    4,    11,   22,   12,   18,   24,   36,   48,   72,   96,   108
	    0x02, 0x04, 0x0b, 0x16, 0x0C, 0x12, 0x18, 0x24, 0x30, 0x48, 0x60, 0x6c

    Example: 
	./uaputl.exe sys_cfg_tx_data_rate 22
		Set AP Tx data rate to 11 M

   	./uaputl.exe sys_cfg_tx_data_rate 0x16
		Set AP Tx data rate to 11 M

	./uaputl.exe sys_cfg_tx_data_rate
		Get AP Tx data rate

sys_cfg_mcbc_data_rate
----------------------
    "./uaputl.exe sys_cfg_mcbc_data_rate [MCBC_DATA_RATE]"

    This command is used to set or get the MCBC data rate to use for multicast 
    or broadcast packet transmission.

    The supported options are:
        0     - Auto rate
        >0    - Set specified MCBC data rate
        empty - Get current MCBC data rate

    MCBC data rate is represented in units of 500 kbps. While setting MCBC data
    rates, only zero or one of rates currently configured as basic rates are allowed.

    For example:  If current basic rates is "0x82 0x84 0x8b 0x96", then the allowed 
                  values for MCBC data rate will be "0x2 0x4 0xb 0x16".

    Example: 
	./uaputl.exe sys_cfg_mcbc_data_rate 22
		Set AP MCBC data rate to 11 M

   	./uaputl.exe sys_cfg_mcbc_data_rate 0
		Set AP MCBC data rate to auto

	./uaputl.exe sys_cfg_mcbc_data_rate
		Get AP MCBC data rate

sys_cfg_pkt_fwd_ctl
-------------------
    "./uaputl.exe sys_cfg_pkt_fwd_ctl [0|1]"

    This command is used to set or get the packet forwarding control
    settings.

    The supported options are:
        0     - Forward all packets to the host
        1     - Firmware handles intra-BSS packets
        empty - Get current packet forwarding setting

    Example: 
	./uaputl.exe sys_cfg_pkt_fwd_ctl 1
		Set AP packet forwarding control to firmware handles intra-BSS packets mode

	./uaputl.exe sys_cfg_pkt_fwd_ctl 
		Get AP packet forwarding control

sys_cfg_sta_ageout_timer
------------------------
    "./uaputl.exe sys_cfg_sta_ageout_timer [STA_AGEOUT_TIMER]"

    This command is used to set or get the STA ageout value.
    
    Value of 0 will mean that stations will never be aged out.

    Minimum value for this is 300. Maximum allowed setting should be 864000.    

    If no arguments are given, this command returns the current STA ageout
    value.

    Ageout timer value is represented in units of 100 ms.

    Example: 
	./uaputl.exe sys_cfg_sta_ageout_timer 1800
		Set AP STA ageout time to 180000 ms 

	./uaputl.exe sys_cfg_sta_ageout_timer 
		Get AP STA ageout time

sys_cfg_ps_sta_ageout_timer
---------------------------
	"./uaputl.exe sys_cfg_ps_sta_ageout_timer [PS_STA_AGEOUT_TIMER]"

	This command is used to set or get the PS STA ageout value.

	Value of 0 will mean that stations will never be aged out.

	Minimum value for this is 300. Maximum allowed setting should be 864000.

	If no arguments are given, this command returns the current	PS STA ageout
	value.

	Ageout timer value is represented in units of 100 ms.

	Example:
	./uaputl.exe sys_cfg_ps_sta_ageout_timer 1800
		Set AP PS STA ageout time to 180000 ms

	./uaputl.exe sys_cfg_ps_sta_ageout_timer
		Get AP PS STA ageout time

sys_cfg_auth
------------
    "./uaputl.exe sys_cfg_auth [AUTHMODE]"

    This command is used to set or get the AP authentication mode.

    The supported options are:
        AUTHMODE :     0 - Open authentication
                       1 - Shared key authentication
    empty - Get current authentication mode

    Example: 
	./uaputl.exe sys_cfg_auth 0
		Set AP authentication mode to Open.

	./uaputl.exe sys_cfg_auth 
		Get AP authentication mode.

sys_cfg_protocol 
----------------
    "./uaputl.exe sys_cfg_protocol [PROTOCOL]"

    This command is used to set or get the encryption protocol.

    The supported options are:
	PROTOCOL: 
			1		 No RSN
			2		WEP Static
			8		  WPA	
			32		  WPA2
			40		 WPA, WPA2 Mixed Mode
    empty - Get current encryption protocol

    Example: 
	./uaputl.exe sys_cfg_protocol 2
		Set AP encryption protocol to static WEP.

	./uaputl.exe sys_cfg_protocol
		Get AP encryption protocol.

sys_cfg_wep_key
---------------
    "./uaputl.exe sys_cfg_wep_key [INDEX ISDEFAULT Key_0]
                                  [INDEX ISDEFAULT Key_1]
                                  [INDEX ISDEFAULT Key_2]
                                  [INDEX ISDEFAULT Key_3] 
                                  [INDEX]"

    This command is used to set or get the WEP key settings.

    The supported options are:
        INDEX:       0 - KeyIndex is 0 
                     1 - KeyIndex is 1 
                     2 - KeyIndex is 2  
                     3 - KeyIndex is 3 
	ISDEFAULT:   0: KeyIndex is not the default
		     1: KeyIndex is the default transmit key

        KEY_* :      Key value.
        empty - Get current WEP key settings for all the keys
        INDEX - Only INDEX will get the key setting for the particular
                KeyIndex.

    Example: 
	./uaputl.exe sys_cfg_wep_key 0 1 55555
		Set AP's default transmit key to "55555", key index is 0. 

	./uaputl.exe sys_cfg_wep_key
		Get AP all the WEP keys settings.

	./uaputl.exe sys_cfg_wep_key 1
		Get WEP key setting for the KeyIndex = 1.

sys_cfg_cipher 
--------------
    "./uaputl.exe sys_cfg_cipher [PAIRWISE_CIPHER GROUP_CIPHER]"

    This command is used to set or get the key types for the pairwise and group key.

    The supported options are:
	PAIRWISE_CIPHER: 
			0		  None	
			4		  TKIP	
			8		 AES CCMP
			12		 AES CCMP + TKIP
        GROUP_CIPHER:    
			0		  None	
			4		  TKIP	
			8		 AES CCMP
    	empty - Get current key types

	Valid combinations of [PAIRWISE_CIPHER GROUP_CIPHER] are:
		[0 0], [4 4], [8 8], [12 4].

    Example: 
	./uaputl.exe sys_cfg_cipher 4 4
		Set AP's pairwise and group key's type to TKIP. 

	./uaputl.exe sys_cfg_cipher
		Get AP's key types for the pairwise and group key. 

sys_cfg_pwk_cipher
------------------
    "./uaputl.exe sys_cfg_pwk_cipher [<PROTOCOL>] [PAIRWISE_CIPHER]"

    This command is used to set or get protocol and corresponding pairwise cipher settings.

    The supported options are:
        PROTOCOL:
                        0                None
                        8                 WPA
                        32                WPA2
        PAIRWISE_CIPHER:
                        0                 None
                        4                 TKIP
                        8                AES CCMP
                        12               AES CCMP + TKIP
        WPA/TKIP cipher cannot be used when uAP operates in 802.11n mode.
        If only PROTOCOL is provided, pairwise cipher for that protocol is displayed.
        empty - Get protocol and corresponding pairwise cipher settings.

    Example:
        ./uaputl.exe sys_cfg_pwk_cipher 8 4
                Set AP's pairwise cipher to TKIP for WPA protocol.

        ./uaputl.exe sys_cfg_pwk_cipher 32
                Get AP's pairwise cipher for WPA2 protocol.

        ./uaputl.exe sys_cfg_pwk_cipher
                Get AP's protocol and corresponding pairwise cipher settings.

sys_cfg_gwk_cipher
------------------
    "./uaputl.exe sys_cfg_gwk_cipher [GROUP_CIPHER]"

    This command is used to set or get group cipher.

    The supported options are:
        GROUP_CIPHER:
                        0                 None
                        4                 TKIP
                        8                AES CCMP
        empty - Get group cipher settings.

    Example:
        ./uaputl.exe sys_cfg_gwk_cipher 8
                Set AP's group cipher to AES CCMP.

        ./uaputl.exe sys_cfg_gwk_cipher
                Get AP's group cipher settings.

sys_cfg_group_rekey_timer 
-------------------------
    "./uaputl.exe sys_cfg_group_rekey_timer [GROUP_REKEY_TIMER]"

    This command is used to set or get the AP group re-key time interval, in seconds.

    The supported options are:
        GROUP_REKEY_TIMER is represented in seconds. This is only applicable
    	if the protocol is WPA or WPA2. Value of 0 will disable group re-key.

        empty - Get current group rekey timer

    Example: 
	./uaputl.exe sys_cfg_group_rekey_timer 1800
		Set AP's group re-key time interval to 1800 s

	./uaputl.exe sys_cfg_group_rekey_timer
		Get AP's group re-key time interval. 

sys_cfg_wpa_passphrase
----------------------
    "./uaputl.exe sys_cfg_wpa_passphrase [PASSPHRASE]"

    This command is used to set or get the WPA or WPA2 passphrase.

    If no arguments are given, this command returns the current WPA or WPA2
    passphrase.
    While setting, the maximum length of the passphrase can be 64 characters.

    Example: 
	./uaputl.exe sys_cfg_wpa_passphrase 1234567890
		Set AP's WPA or WPA2 passphrase to "1234567890"

	./uaputl.exe sys_cfg_wpa_passphrase
		Get AP's WPA or WPA2 passphrase. 

sys_cfg_max_sta_num
-------------------
    "./uaputl.exe sys_cfg_max_sta_num [STA_NUM]"

    This command is used to set or get the maximum number of stations allowed to connect to uAP. 
    	
    The maximum STA_NUM allowed is 10.
       
    If no arguments are given, this command returns the maximum number of stations 
		allowed to connect to uAP.

    Example: 
	./uaputl.exe sys_cfg_max_sta_num 2
		Set AP's maximum station number to 2

	./uaputl.exe sys_cfg_max_sta_num
		Get AP's maximum station number 

sys_cfg_retry_limit
-------------------
    "./uaputl.exe sys_cfg_retry_limit [RETRY_LIMIT]"

    This command is used to set or get the retry limit to use for packet transmissions. 
    	
    The maximum retry_limit allowed is 14.
       
    If no arguments are given, this command returns the current retry limit value.

    Example: 
	./uaputl.exe sys_cfg_retry_limit 2
		Set AP's retry limit value to 2

	./uaputl.exe sys_cfg_retry_limit
		Get AP's retry limit value 

sys_cfg_eapol_pwk_hsk
---------------------
    "./uaputl.exe sys_cfg_eapol_pwk_hsk [<TIMEOUT> <RETRIES>]"

	This command is used to set or get pairwise handshake update timeout and
	number of retries.

	Both TIMEOUT and number of RETRIES should be provided for a 'set'.
	
	If no arguments are given, this command returns timeout value and number
	of
	retries for pairwise key.
	
	Example:
	./uaputl.exe sys_cfg_eapol_pwk_hsk 50 2
		Set AP's pairwise key timeout to 50ms and number of retries to 2.
	
	./uaputl.exe sys_cfg_eapol_pwk_hsk
		Get AP's pairwise key timeout and number of retries.
			
sys_cfg_eapol_gwk_hsk
---------------------
	"./uaputl.exe sys_cfg_eapol_gwk_hsk [<TIMEOUT> <RETRIES>]"
	
	This command is used to set or get groupwise handshake update timeout and
	number of retries.
	
	Both TIMEOUT and number of RETRIES should be provided for a	'set'.
	
	If no arguments are given, this command returns timeout	value and number
	of retries for groupwise key.
	
	Example:
	./uaputl.exe sys_cfg_eapol_gwk_hsk 50 2
	Set AP's groupwise key timeout to 50ms and number of retries to 2.
	
	./uaputl.exe sys_cfg_eapol_gwk_hsk
	Get AP's groupwise key timeout and number of retries.

sta_filter_table
----------------
    "./uaputl.exe sta_filter_table <FILTERMODE> [<MACADDRESS_LIST>]"

    This command is used to get or set the client station MAC address
    filter table.

    The supported options are:
    FILTERMODE : 0 - Disable filter table
                 1 - Allow mac address specified in the allowed list
                 2 - Block MAC addresses specified in the  banned list
    MACADDRESS_LIST is the list of MAC addresses to be acted upon. Each
    MAC address must be separated with a space. Maximum of 16 MAC addresses
    are supported.

    empty - Get current client station MAC address filter table.

    Example: 
	./uaputl.exe sta_filter_table 0
		Disable filter table

	./uaputl.exe sta_filter_table 1 00:50:43:20:aa:bb
		Set AP's filter mode to allow, only MAC address "00:50:43:ab:bb" will be allowed. 

	./uaputl.exe sta_filter_table
		Get AP's filter table settings.

regrdwr
-------
     "./uaputl.exe regrdwr <TYPE> <OFFSET> [value]"

     These commands are used to read the MAC, BBP, RF and PMIC registers from the card.
     TYPE can take 3 values, 1 - read/write MAC register
                             2 - read/write BBP register
                             3 - read/write RF  register

     OFFSET specifies the offset location that is to be read.  
     This parameter can be specified either in decimal or in hexadecimal (by preceding the number with a "0x").

     value if specified, then that value will be written to that offset in the specified register. Value should be
     specified in hexadecimal.

     Example: 
	./uaputl.exe regrdwr 1 0xa123
		read MAC register 0xa123

	./uaputl.exe regrdwr 1 0xa123 0xaa
		write 0xaa to MAC register 0xa123

        ./uaputl.exe regrdwr 2 0x0123
		read BBP register 0x0123

	./uaputl.exe regrdwr 2 0x0123 0xaa
		write 0xaa to BBP register 0x0123

        ./uaputl.exe regrdwr 3 0x0123
		read RF register 0x0123

	./uaputl.exe regrdwr 3 0x0123 0xaa
		write 0xaa to RF register 0x0123

memaccess
---------
 	"./uaputl.exe memaccess <ADDR> [value]"
	This commands is used to read/write to a memory address 

	ADDR specifies the address of the location that is to be read/write  
	This parameter can be specified either in decimal or in hexadecimal (by preceding the number with a "0x").

	value if specified, then that value will be written to that address in the specified register. 

	Example: 
		./uaputl.exe memaccess 0xc00153e4 
			read contents of memory location 0xc00153e4

        		
		./uaputl.exe memaccess 0xc00153e4 0xaabbccdd
			write value 0xaabbccdd to  memory location 0xc00153e4

rdeeprom
--------
    "./uaputl.exe rdeeprom <offset> <bytecount>" 

    This command is used to read bytes from offset location on
    EEPROM
            
    offset: 0,4,8,..., multiple of 4 
    bytecount: 4-20, multiple of 4

   	Example: 
    ./uaputl.exe rdeeprom 200 12 
        read 12 bytes from offset 200 ON EEPROM

cfg_data
--------
 	"./uaputl.exe cfg_data <type> [*.conf]"

    This command is used to set/get the configuration data to/from the firmware. 
    
    type: 2 -- cal data

   	Example: 
        ./uaputl.exe cfg_data 2 cal_data.conf    
            read cal_data from cal_data.conf and download to firmware.
        ./uaputl.exe cfg_data 2 
            read cal_data from firmware 

sys_cfg_80211d 
--------------
    "./uaputl.exe sys_cfg_80211d [state STATE] [country COUNTRY]"
    This command is used to set/get 802.11D specific parameters.
    If no parameters are provided, this command returns state, country and
    domain information.
    
    Allowed values for state are 0 for disable and 1 for enable. 
    COUNTRY is a two letter string input (derived from ISO 3166 code;
    http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm
    )

    Countries are mapped with specific domain in file "80211d_domain.conf". In
    order to set customize band setting, user can modify 80211d_domain.conf
    file. 

    Example:
    ./uaputl.exe sys_cfg_80211d state 0         
        To-disable

    ./uaputl.exe sys_cfg_80211d state 1         
        To-enable

    ./uaputl.exe sys_cfg_80211d country IN      
        for using country as INDIA

    ./uaputl.exe sys_cfg_80211d state 1 country US 
        for enabling and setting country in single command.

uap_stats
---------
    "./uaputl.exe uap_stats"
    This command is used to get uAP statistics.

    Example:
    ./uaputl.exe uap_stats

sys_debug 
---------
	"./uaputl.exe sys_debug [subcmd] [parameter]
	This command is used to set/get debug parameters.
	If no [parameter] are given, this command returns the debug parameters for selected subcmd.

	subcmd : 1 -- used to set/get global debug mode
	         2 -- used to set/get MajorId mask
	         3 -- used to set user scan
	         N -- Any other value is used for FW specific debugging and should
             not be used.

	parameter: parameters for specific subcmd.
		   This parameter can be specified either in decimal or 
			in hexadecimal (by preceding the number with a "0x").	

	Example:
		./uaputl.exe sys_debug 1 1
			Enable global debug mode.

		./uaputl.exe sys_debug 1 0
			Disable global debug mode

		./uaputl.exe sys_debug 1 
			Get current global debug mode
		
		./uaputl.exe sys_debug 2 
			Get current MajorId mask

		./uaputl.exe sys_debug 2 0x123
			Set current MajorId mask to 0x123

		./uaputl.exe sys_debug 3 
			Set channel scan. The command displays Channels scanned, number of APs,
			CCA count, duration and weight of the channel.

powermode 
---------
    "./uaputl.exe powermode [MODE] [SLEEP_PARAM=1 CTRL MIN_SLEEP MAX_SLEEP]
                                   [INACT_PARAM=2 INACTTO MIN_AWAKE MAX_AWAKE]"

    This command is used to set or get the AP's power mode, sleep param and inactivity sleep param.

    The supported options are:
        MODE :     0 - disable power mode
                   2 - enable inactivity based power save mode

        SLEEP_PARAM:  
            CTRL:  0 - disable protection frame Tx before PS
                   1 - enable protection frame Tx before PS
            MIN_SLEEP: Minimum sleep duration in microseconds, default value 17000 us 
            MAX_SLEEP: Maximum sleep duration in microseconds, default value 17000 us
			The value of MIN_SLEEP should be >= 5000 us.
			The value of MAX_SLEEP should be <= beacon interval(when ctrl: 0).
			The value of MAX_SLEEP should be <= 32000 us(when ctrl: 1).

        INACT_PARAM: 
            INACTTO: Inactivity timeout in microseconds, default value is 200000 us
            MIN_AWAKE: Minimum awake duration in microseconds, default value is 2000 us
            MAX_AWAKE: Maximum awake duration in microseconds, default value is 2000 us
			The value of MIN_AWAKE should be >= 2000 us.
                           
	empty - Get current power mode

    Example: 
	./uaputl.exe powermode 0
		Disable AP's power mode.
   	./uaputl.exe powermode 2
		Enable inactivity based power save mode.   

   	./uaputl.exe powermode 2 2 400000 10000 10000
		Enable inactivity based power save mode and set inactivity sleep param with 
		inactivity timeout 400000 us, minimum awake duration to 10000us,
		maximum awake duration to 10000 us

	./uaputl.exe powermode 2 1 1 20000 20000
		Enable inactivity based power save mode	and set sleep param, enable
		protection, and set minimum	sleep during to 20000 us, maximum sleep
		duration to 20000 us

	./uaputl.exe powermode 
		Get current AP's power mode.

pscfg 
---------
    "./uaputl.exe pscfg [MODE] [CTRL INACTTO MIN_SLEEP MAX_SLEEP MIN_AWAKE MAX_AWAKE]

    This command is used to set or get the AP's power mode and power save params. 

    The supported options are:
        MODE :     0 - disable power mode
                   2 - enable inactivity based power save mode

        PS PARAMS:  
            CTRL:  0 - disable protection frame Tx before PS
                   1 - enable protection frame Tx before PS
            INACTTO: Inactivity timeout in microseconds, default value is 200000 us
            MIN_SLEEP: Minimum sleep duration in microseconds, default value 17000 us 
            MAX_SLEEP: Maximum sleep duration in microseconds, default value 17000 us
			The value of MIN_SLEEP should be >= 5000 us.
			The value of MAX_SLEEP should be <= beacon interval(when ctrl: 0).
			The value of MAX_SLEEP should be <= 32000 us(when ctrl: 1).

            MIN_AWAKE: Minimum awake duration in microseconds, default value is 2000 us
            MAX_AWAKE: Maximum awake duration in microseconds, default value is 2000 us
			The value of MIN_AWAKE should be >= 2000 us.
            MIN_AWAKE,MAX_AWAKE only valid when MODE is set to inactivity based power save mode.
            
                           
	empty - Get current power mode and power save params.

    Example: 
	./uaputl.exe pscfg 0
		Disable AP's power mode.

   	./uaputl.exe pscfg 2
		Enable inactivity based power save mode.   

   	./uaputl.exe pscfg 2 1 400000 20000 20000 10000 10000
		Enable inactivity based power save mode, enable protection, set inactivity timeout 400000 us
        set minimum sleep duration to 20000 us, maximum sleep duration to 20000 us
        and set minimum awake duration to 10000us, maximum awake duration to 10000 us

	./uaputl.exe pscfg 
		Get current AP's power mode and power save params. 

hscfg
-----
    ./uaputl.exe hscfg [condition [[GPIO# [gap]]]]
	This command is used to configure the host sleep parameters.

	This command takes one (condition), two (condition and GPIO#) or three 
	(condition, GPIO# and gap) parameters for set. If no paramter provided, 
	get is performed.

	where Condition is:
		bit 0 = 1   -- broadcast data
		bit 1 = 1   -- unicast data
		bit 2 = 1   -- mac event
		bit 3 = 1   -- multicast packet
	The host sleep mode will be cancelled if condition is set to 0xffff. 
	The default is 0xf.

	where GPIO is the pin number of GPIO used to wakeup the host. It could be 
	any valid GPIO pin# (e.g. 0-7) or 0xff (interface, e.g. SDIO will be used 
	instead). The default is 0xff.

	where Gap is the gap in milliseconds between wakeup signal and wakeup event
	or 0xff for special setting when GPIO is used to wakeup host. The default is 0.

	Examples:
		./uaputl.exe hscfg              : Get current host sleep mode
		./uaputl.exe hscfg 0xffff       : Cancel host sleep mode
		./uaputl.exe hscfg 3            : Broadcast and unicast data
		                                  Use GPIO and gap set previously
		./uaputl.exe hscfg 2 3          : Unicast data
		                                  Use GPIO 3 and gap set previously
		./uaputl.exe hscfg 2 1 0xa0     : Unicast data
		                                  Use GPIO 1 and gap 160 ms
		./uaputl.exe hscfg 2 0xff       : Unicast data
		                                  Use interface (e.g. SDIO)
		                                  Use gap set previously
		./uaputl.exe hscfg 4 3 0xff     : MAC event
		                                  Use GPIO 3
		                                  Special host sleep mode
		./uaputl.exe hscfg 1 0xff 0xff  : Broadcast data
		                                  Use interface (e.g. SDIO)
		                                  Use gap 255ms

sta_deauth_ext
--------------
    "./uaputl.exe sta_deauth_ext <STA_MAC_ADDRESS><REASON_CODE>"

    This command is used to de-authenticate a client station with specific reason code.

    Example:
        ./uaputl.exe sta_deauth_ext 00:50:43:20:34:58  4
            deauth station 00:50:43:20:34:58 with IEEE reason code 4 (Disassociated due to inactivity)

sys_cfg_custom_ie
-----------------
    "./uaputl.exe sys_cfg_custom_ie [INDEX] [MASK] [IEBuffer]"

    This command is used to set or get custom IEs for management frames.

    The supported options are:
        INDEX:       0 - IE Index is 0 
                     1 - IE Index is 1 
                     2 - IE Index is 2  
                     3 - IE Index is 3 
               	    -1 - Append/Delete IE automatically
                         Delete will delete the IE from the matching IE buffer
                         Append will append the IE to the buffer with the same mask
        MASK :       Management subtype mask value as per bit definitions
	                   :  Bit 0 - Association request.
	                   :  Bit 1 - Association response.
	                   :  Bit 2 - Reassociation request.
	                   :  Bit 3 - Reassociation response.
	                   :  Bit 4 - Probe request.
	                   :  Bit 5 - Probe response.
	                   :  Bit 8 - Beacon.
        MASK :       MASK = 0 to clear the mask and the IE buffer

        IEBuffer:    IE buffer to set in hexadecimal bytes.
	                  The Buffer should not be space separated.
	                  ( Maximum length = 256 bytes )
        empty - Get IE buffer, subtype mask settings for all the indices [0-3]. 
        INDEX - Only INDEX will get the IE buffer configured for the particular
                Index.

    Example: 
	./uaputl.exe sys_cfg_custom_ie
		Get IE buffer, subtype mask settings for all indices [0-3].

	./uaputl.exe sys_cfg_custom_ie 1
		Get IE buffer and subtype mask WEP key setting for the Index = 1.

	./uaputl.exe sys_cfg_custom_ie 2 0
		Clear IE buffer and mask value for Index = 2. 

	./uaputl.exe sys_cfg_custom_ie 3 0x101 0xdd051234567890
		Set IE buffer and mask value for Index = 3. 

	./uaputl.exe sys_cfg_custom_ie -1 0x101 0xdd051234567890
		Append the specified IEBuffer at index with mask value of 0x101
	
	./uaputl.exe sys_cfg_custom_ie -1 0 0xdd051234567890
		Delete the specified IEBuffer from all the IEs at 0-3 index.

	./uaputl.exe sys_cfg_custom_ie 2 0 0xdd051234567890
		Delete the specified IEBuffer from the IEs at index 2.

sys_cfg_wmm
-----------
    "./uaputl.exe sys_cfg_wmm [qosinfo=<qosinfo>]
                              [0]
                              [AC_BE AIFSN ECW_MAX ECW_MIN TX_OP]
                              [AC_BK AIFSN ECW_MAX ECW_MIN TX_OP]
                              [AC_VI AIFSN ECW_MAX ECW_MIN TX_OP]
                              [AC_VO AIFSN ECW_MAX ECW_MIN TX_OP]" 

    This command can be used set/get WMM parameters

    The supported option are:
        qosinfo: qos information. User can set only MSB. Valid values are 0x80 and 0x00.
        Lower 4 bits are managed by FW. Hence, value read for qosinfo may have
        lower 4 bits non-zero.

        AC_BE: 0
        AC_BK: 1
        AC_VI: 2
        AC_V0: 3
        AIFSN: AIFSN value
        ECW_MAX: ECW max
        ECW_MIN: ECW min
        TX_OP: TXOP Limit
        empty - Get current WMM parameters
        When all the parameter are 0, wmm will be disabled. 

        Example:
        ./uaputl.exe sys_cfg_wmm 0 3 10 4 0
           Set AC_BE with AIFSN 3, ECW_MAX 10, ECW_MIN 4 and TXOP 0
        
        ./uaputl.exe sys_cfg_wmm 1 7 10 4 0
           Set AC_BK with AIFSN 7, ECW_MAX 10, ECW_MIN 4 and TXOP 0

        ./uaputl.exe sys_cfg_wmm 2 2 4 3 94
           Set AC_VI with AIFSN 2, ECW_MAX 4, ECW_MIN 3 and TXOP 94

        ./uaputl.exe sys_cfg_wmm 3 2 3 2 47
           Set AC_VO with AIFSN 2, ECW_MAX 3, ECW_MIN 2 and TXOP 47

        ./uaputl.exe sys_cfg_wmm
            Get current wmm parameters
        
        ./uaputl.exe sys_cfg_wmm 0 3 10 4 0 1 7 10 4 0 2 2 4 3 94 3 2 3 2 47
            Set AC_BE with AIFSN 3, ECW_MAX 10, ECW_MIN 4 and TXOP 0
            Set AC_BK with AIFSN 7, ECW_MAX 10, ECW_MIN 4 and TXOP 0
            Set AC_VI with AIFSN 2, ECW_MAX 4, ECW_MIN 3 and TXOP 94
            Set AC_VO with AIFSN 2, ECW_MAX 3, ECW_MIN 2 and TXOP 47

        ./uaputl.exe sys_cfg_wmm qosinfo=0x80 0 3 10 4 0 1 7 10 4 0 2 2 4 3 94 3 2 3 2 47
            Enable wmm PS mode.
            Set AC_BE with AIFSN 3, ECW_MAX 10, ECW_MIN 4 and TXOP 0
            Set AC_BK with AIFSN 7, ECW_MAX 10, ECW_MIN 4 and TXOP 0
            Set AC_VI with AIFSN 2, ECW_MAX 4, ECW_MIN 3 and TXOP 94
            Set AC_VO with AIFSN 2, ECW_MAX 3, ECW_MIN 2 and TXOP 47

        ./uaputl.exe sys_cfg_wmm 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
        ./uaputl.exe sys_cfg_wmm 0
            Disable wmm

addbapara
---------
    "./uaputl.exe addbapara [timeout txwinsize rxwinsize]"
	This command can be used to update the default ADDBA parameters.

	The supported options are:
	    timeout - This is the block ack timeout for ADDBA request. 
		    0 : Disable (recommended for throughput test)
		    1 - 65535 : Block Ack Timeout in TU
	    txwinsize - Buffer size for ADDBA request. (64 is recommended and default value)
	    rxwinsize - Buffer size for ADDBA response. (8 is recommended for uap)
        empty - Get current ADDBA parameters.

    Current window size limit for Tx as well as Rx is 1023.

	Example:
	./uaputl.exe addbapara 
        Get the current addba params
    ./uaputl.exe addbaparam 1000 64 8 
        This will change the ADDBA timeout to (1000 * 1024) us,	txwinsize to 64 and rxwinsize to 5.

	In case the ADDBA timeout value is updated then a ADDBA is sent for all streams 
	to update the timeout value.

	In case txwinsize and/or rxwinsize is updated, the effect could only be seen on
	next ADDBA request/response. The current streams will not be affected with this
	change.

sys_cfg_11n
-----------
    "./uaputl.exe sys_cfg_11n [ENABLE] [HTCAP] [AMPDU] [TXBFCAP]"
    This command can be used set/get 802.11n parameters. 
    
    The supported option are:
        ENABLE: 0 - disable 802.11n in uap
                1 - enable 802.11n in uap
        HTCAP: HT Capabilities info (default value is 0x111c)
               Bit 15-13: Reserved set to 0
               Bit 12: DSS/CCK mode in 40MHz enable/disable
               Bit 11-10: Reserved set to 0
               Bit 9-8: Reserved set to 0x01
               Bit 7: Reserved set to 0
               Bit 6: Short GI in 40 Mhz enable/disable
               Bit 5: Short GI in 20 Mhz enable/disable
               Bit 4: Green field enable/disble
               Bit 3-2: Reserved set to 1
               Bit 1: 20/40 Mhz enable disable.
               Bit 0: Reserved set to 0
        AMPDU: A-MPDU Parameter (default value is 0x03)
               Bit 7-5: Reserved set to 0
               Bit 4-2: Minimum MPDU Start spacing
                        Set to 0 for no restriction
                        Set to 1 for 1/4 us
                        Set to 2 for 1/2 us
                        Set to 3 for 1 us
                        Set to 4 for 2 us
                        Set to 5 for 4 us
                        Set to 6 for 8 us
                        Set to 7 for 16 us
               Bit 1-0: Max A-MPDU length
        TXBFCAP: TX Beamforming capabilities
               Bit 0    : Implicit TX BF receiving capable
               Bit 1    : RX staggered sounding capable
               Bit 2    : TX staggered sounding capable
               Bit 3    : RX NDP capable
               Bit 4    : TX NDP capable
               Bit 5    : Implicit TX BF capable
               Bit 6-7  : Calibration
                       0: - not supported
                       1: - STA can respond to a calibration request using
                            the CSI Report, but cannot initiate calibration
                       2: - reserved
                       3: - STA can both initiate and respond to a calibration request
               Bit 8    : Explicit CSI TX BF capable
               Bit 9    : Explicit non-compressed steering capable
               Bit 10   : Explicit compressed steering capable
               Bit 11-12: Explicit TX BF CSI feedback
                       0: - not supported
                       1: - delayed feedback
                       2: - immediate feedback
                       3: - delayed and immediate feedback
               Bit 13-14: Explicit non-compressed BF feedback capable
                       0: - not supported
                       1: - delayed feedback
                       2: - immediate feedback
                       3: - delayed and immediate feedback
               Bit 15-16: Explicit compressed BF feedback capable
                       0: - not supported
                       1: - delayed feedback
                       2: - immediate feedback
                       3: - delayed and immediate feedback
               Bit 17-18: Minimal grouping
                       0: - no grouping (STA supports groups of 1)
                       1: - groups of 1, 2
                       2: - groups of 1, 4
                       3: - groups of 1, 2, 4
               Bit 19-20: CSI number of beamformer antennas supported
                       0: - single TX antenna sounding
                       1: - 2 TX antenna sounding
                       2: - 3 TX antenna sounding
                       3: - 4 TX antenna sounding
               Bit 21-22: Non-compressed steering number of beamformer antennas supported
                       0: - single TX antenna sounding
                       1: - 2 TX antenna sounding
                       2: - 3 TX antenna sounding
                       3: - 4 TX antenna sounding
               Bit 23-24: Compressed steering number of beamformer antennas supported
                       0: - single TX antenna sounding
                       1: - 2 TX antenna sounding
                       2: - 3 TX antenna sounding
                       3: - 4 TX antenna sounding
               Bit 25-26: CSI max number of rows beamformer supported
                       0: - single row of CSI
                       1: - 2 rows of CSI
                       2: - 3 rows of CSI
                       3: - 4 rows of CSI
               Bit 27-28: Channel estimation capability
                       0: - 1 space time stream
                       1: - 2 space time streams
                       2: - 3 space time streams
                       3: - 4 space time streams
               Bit 29-31: Reserved
        empty - Get current 802.11n parameters.
        
       	Example:
        ./uaputl.exe sys_cfg_11n 1 0x117e 3      
            enable 802.11n, and set HT Capabilities info to 0x117e, and A-MPDU Parameter to 0x03
        ./uaputl.exe sys_cfg_11n 1 0x117e 3 0xFFFFFFFF
            enable 802.11n, and set HT Capabilities info to 0x117e, A-MPDU
            Parameter to 0x03 and TX Beamforming capabilities to 0xFFFFFFFF
        ./uaputl.exe sys_cfg_11n 0
            disable 802.11n in uap 
        ./uaputl.exe sys_cfg_11n
            Get current 802.11n parameters

aggrpriotbl
-----------
        "./uaputl.exe aggrpriotbl <m0> <n0> <m1> <n1> ... <m7> <n7>"
        This command is used set/get the priority table for AMPDU/AMSDU traffic per tid.
	    This command can also be used to disable AMPDU/AMSDU for a given tid.
	    In case of AMPDU this priority table will be used to setup block ack (to make
	    sure the highest priority tid always uses AMPDU as we have limited AMPDU streams)
        
        The supported option are:
            <m0> <n0> <m1> <n1> ... <m7> <n7>

	    <mx> - This is priority for Tid0 for AMPDU packet. A priority could be any 
                values between 0 - 7, 0xff to disable aggregation.
	    <nx> - This is priority for Tid0 for AMSDU packet. A priority could be any 
		        values between 0 - 7, 0xff to disable aggregation. 
        
        empty - Get current priority table for AMPDU/AMSDU traffic.
        
        Example:
        ./uaputl.exe aggrpriotbl  
            This command will get the current Priority table for AMPDU and AMSDU.
			<2 2 0 0 1 1 3 3 4 4 5 5 255 255 255 255>. This is read as
			<"Prio for AMPDU for Tid0" "Prio for AMSDU for Tid0" 
			"Prio for AMPDU for Tid1" "Prio for AMSDU for Tid1" and so on

	    ./uaputl.exe aggrpriotbl 2 2 0 0 1 1 3 3 4 4 5 5 255 255 255 255 
            This will set the priority table for AMPDU and AMSDU
			Priority for Tid0/AMPDU = 2, Tid0/AMSDU = 2, Tid1/AMPDU = 0, Tid1/AMSDU = 0
			and so on. Aggregation for Tid6 and Tid7 are disabled. 
			Here higher the priority number, higher the priority (i.e. 7 
			has higher priority than 6). Similarly for AMSDU.

	    ./uaputl.exe aggrpriotbl 0xff 2 0xff 0 0xff 1 0xff 3 0xff 4 0xff 5 0xff 0xff 0xff 0xff 
            This will disable AMPDU for all the TIDs but will still keep AMSDU enabled to Tid0 to Tid5

	    A delBA should be seen in case a disable happens on a TID for which AMPDU stream 
	        is currently setup. 

        Note:- This command should only be issued in disconnected state.

addbareject
-----------
        "./uaputl.exe addbareject <m0> <m1> ... <m7>"
        This command is used set/get the addbareject table for all the TIDs.
	    This command can also be used to enable rejection of ADDBA requests for a given tid.

        The supported option are:
            <m0> <m1> ... <m7>
        <mX> - This can be 0/1 for TidX. 1 enables rejection of ADDBA request for TidX and 
		   0 would accept any ADDBAs for TidX.
        empty - Get current addbareject table for all the TIDs.

        Example:
        ./uaputl.exe addbareject 
            This command will get the current table.
	        [0 0 0 0 0 0 0 0]. ADDBA would be accepted for all TIDs. This is the default state.

        ./uaputl.exe addbareject 0 0 1 1 0 0 0 0 
            This command will accept ADDBA requests for Tid [0,1,4,5,6,7] and reject ADDBA requests for Tid [2,3]
							
	    ./uaputl.exe addbareject 1 1 1 1 1 1 1 1 
            This will enable rejection of ADDBA requests for all Tids.

        Note:- This command should only be issued in disconnected state.

deepsleep
---------
    "./uaputl.exe deepsleep [MODE] [IDLE_TIME]"
    This command is used to set/get auto deep sleep mode.

    The supported option are:
        [MODE]: Enable/disable auto deep sleep mode (1/0)
        [IDLE_TIME]: Idle time in milliseconds after which firmware will put the device 
                    in deep sleep mode. Default value is 100 ms.
        empty - Get current deep sleep mode.
    
    Example:
    ./uaputl.exe deepsleep          : Display auto deep sleep mode
    ./uaputl.exe deepsleep 1        : Enable auto deep sleep mode, idle time unchanged
    ./uaputl.exe deepsleep 0        : Disable auto deep sleep mode
    ./uaputl.exe deepsleep 1 500    : Enable auto deep sleep mode with idle time 500 ms

txpwrlimit_cfg_get
txpwrlimit_2g_cfg_set
txpwrlimit_5g_cfg_set
------------------
    This command is used to set/get the configuration data of Tx power limitation.
    Note: The configuration set should be issued when no STA is connected.

    Examples:
        ./uaputl.exe hostcmd config/txpwrlimit_cfg.conf txpwrlimit_cfg_get
        ./uaputl.exe hostcmd config/txpwrlimit_cfg.conf txpwrlimit_2g_cfg_set
        ./uaputl.exe hostcmd config/txpwrlimit_cfg.conf txpwrlimit_5g_cfg_set

===============================================================================
        U S E R  M A N U A L  F O R  MLANEVENT

NAME
mlanevent.exe 

This tool can be used to listen for and obtain events from the uAP driver
through the netlink layer.

----------------
Supported events
----------------
STA_DEAUTH
STA_ASSOC
BSS_START
BSS_IDLE
BSS_ACTIVE

-----------------
Details of events
-----------------

STA_DEAUTH
----------
    For this event, the following information is shown:
        + Deauthenticated STA MAC address.
        + Reason for deauthentication.

STA_ASSOC
---------
    For this event, the following information is shown:
        + STA MAC address.

BSS_START
---------
    For this event, the following information is shown:
        + AP MAC address.

BSS_IDLE
--------
    For this event, there is no associated information.

BSS_ACTIVE
----------
    For this event, there is no associated information.

===============================================================================
        U S E R  M A N U A L  F O R  IWPRIV

NAME
	This manual describes the usage of private commands used in Marvell MLAN
	Linux UAP Driver.

	To use parameters as hex format, a '0x' must precede it for the parameters to 
	be parsed properly.

SYNOPSIS
	iwpriv <uapX> <command> [sub-command] ...

	iwpriv uapX start
	iwpriv uapX stop
	iwpriv uapX bssstart
	iwpriv uapX bssstop
	iwpriv uapX fwreload <path>
	iwpriv uapX apcfg "ASCII_CMD=AP_CFG,SSID=TEST_uAP,[SEC,][KEY,]
	                   [CHANNEL,][PREAMBLE,][MAX_SCB,][END]"

DESCRIPTION
	Those commands are used to send additional commands to the Marvell MLAN
	card via the Linux device driver.

	The uapX parameter specifies the network device that is to be used to 
	perform this command on. It could be uap0, uap1 etc.

start
	Start the uAP driver.

	Usage:
		iwpriv uapX start

stop
	Stop the uAP driver.

	Usage:
		iwpriv uapX stop

bssstart
	Start the AP mode, so that uAP will start transmitting beacon.

	Usage:
		iwpriv uapX bssstart

bssstop
	Stop the AP mode and disconnect all stations. uAP will stop
	transmitting beacon as well.

	Usage:
		iwpriv uapX bssstop

fwreload
	Reload the firmware. Here string "FW_PATH=" in the path
	argument is mandatory part.

	Usage:
		iwpriv uapX fwreload <path>

apcfg
	This command is used to set the AP configurations. Here string
	"ASCII_CMD=AP_CFG" is minimum requirement in the ASCII string.
	Note: BSS will be stopped then restarted if BSS is already started 
	when the command is received.

	Usage:
		iwpriv uapX apcfg "ASCII_CMD=AP_CFG,SSID=TEST_uAP,[SEC=sec,]
			[KEY=key,][CHANNEL=channel,][MAX_SCB=max_scb,][END]"

	Where the parameters are:
		SSID:       Set SSID to be used in beacon and probe response
		[SEC]:      Security modes - open or wpa2-psk
		[KEY]:      Encrypted key for WPA2-PSK, minimum 8 chars
		[CHANNEL]:  Channel to be selected
		[MAX_SCB]:  Maximum STA number
		[END]:      Optional termination in ASCII string

	Examples:
		iwpriv uap0 apcfg "ASCII_CMD=AP_CFG,SSID=TEST_uAP"
                                        : Set AP SSID to "TEST_uAP"
		iwpriv uap0 apcfg "ASCII_CMD=AP_CFG,SSID=TEST_uAP,SEC=open"
                                        : Set AP SSID to "TEST_uAP" and
                                          security mode is disabled
		iwpriv uap0 apcfg "ASCII_CMD=AP_CFG,SSID=TEST_uAP,SEC=WPA2-PSK,KEY=ecbe5facdbfe234a"
                                        : Set AP SSID to "TEST_uAP" and security mode
                                          to WPA2-SPK and encrypted key ecbe5facdbfe234a
		iwpriv uap0 apcfg "ASCII_CMD=AP_CFG,SSID=TEST_uAP,CHANNEL=8"
                                        : Set AP SSID to "TEST_uAP" and
                                          set the AP channel to 8

===============================================================================
